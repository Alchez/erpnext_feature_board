apiVersion: apps/v1
kind: Deployment
metadata:
  name: in-cluster-registry
  namespace: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: in-cluster-registry
  template:
    metadata:
      labels:
        app: in-cluster-registry
    spec:
      volumes:
        - name: registry-config
          configMap:
            name: registry-config
      containers:
      - image: registry:2
        imagePullPolicy: IfNotPresent
        name: in-cluster-registry
        resources: {}
        volumeMounts:
          - name: registry-config
            mountPath: /etc/docker/registry/config.yml
            subPath: config.yml

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-config
  namespace: registry
data:
  config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      s3:
        accesskey: access_key
        secretkey: secret_key
        region: ams3
        regionendpoint: https://ams3.digitaloceanspaces.com
        bucket: bucket
        rootdirectory: /pr-cr
      delete:
        enabled: true
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3

---

apiVersion: v1
kind: Service
metadata:
  name: in-cluster-registry-service
  namespace: registry
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: in-cluster-registry
  type: ClusterIP
